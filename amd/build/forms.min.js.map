{"version":3,"file":"forms.min.js","sources":["../src/forms.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module forms\n *\n * @module     assignsubmission_forms/forms\n * @copyright  2025 Bas Brands <bas@sonsbeekmedia.nl>, Jonas Rehkopp <jonas.rehkopp@polizei.nrw.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {getString} from 'core/str';\nimport Repository from './repository';\nimport $ from 'jquery';\nimport {debounce} from 'core/utils';\n\nconst DEBOUNCE_TIMER = 2000;\n\nclass Forms {\n    constructor() {\n        this.rootElement = document.querySelector('.forms-form');\n        this.init();\n    }\n\n    async init() {\n        const textareas = this.rootElement.querySelectorAll('textarea');\n        // Create a new <div> with a word counter after each textarea, give it the id of the textarea + '-wordcounter'\n        textareas.forEach(async(textarea) => {\n            const areaid = textarea.dataset.fieldid + '-wordcounter';\n            const statusid = textarea.dataset.fieldid + '-status';\n            const count = textarea.value.split(/\\s+/).filter((word) => word.length > 0).length;\n            const {html, js} = await Templates.renderForPromise('assignsubmission_forms/fieldactions',\n                {areaid: areaid, statusid: statusid, count: count});\n            Templates.appendNodeContents(textarea.parentNode, html, js);\n        });\n        this.addValidationClassesToInput();\n\n        this.bindEvents();\n\n    }\n\n    /**\n     * Adds validation classes and event listeners to input and textarea elements\n     * for client-side validation feedback.\n     * But only if the field is required\n     */\n    addValidationClassesToInput() {\n        const setValidationState = (element) => {\n            if (element.value.trim() === '') {\n                element.classList.add('is-invalid');\n            } else {\n                element.classList.remove('is-invalid');\n            }\n        };\n\n        const handleFocusOut = (element) => {\n            element.classList.add('needs-validation', 'was-validated');\n            setValidationState(element);\n        };\n\n        const handleFocus = (element) => {\n            element.classList.remove('needs-validation', 'was-validated');\n            setValidationState(element);\n        };\n\n        const handleKeyUp = (element) => {\n            setValidationState(element);\n        };\n\n        // Handle input fields\n        const inputs = this.rootElement.querySelectorAll('input');\n        inputs.forEach(input => {\n            if (input.hasAttribute('aria-required')) {\n                input.addEventListener('focusout', () => handleFocusOut(input));\n                input.addEventListener('focus', () => handleFocus(input));\n                input.addEventListener('keyup', () => handleKeyUp(input));\n            }\n        });\n\n        // Handle textarea fields\n        const textareas = this.rootElement.querySelectorAll('textarea');\n        textareas.forEach(textarea => {\n            if (textarea.hasAttribute('aria-required')) {\n                textarea.addEventListener('focusout', () => handleFocusOut(textarea));\n                textarea.addEventListener('focus', () => handleFocus(textarea));\n                textarea.addEventListener('keyup', () => handleKeyUp(textarea));\n            }\n        });\n    }\n\n    async bindEvents() {\n        // Bind events here\n        const textareas = this.rootElement.querySelectorAll('textarea');\n        const inputs = this.rootElement.querySelectorAll('input[type=\"text\"]');\n        const checkboxes = this.rootElement.querySelectorAll('input[type=\"checkbox\"]');\n        const dateSelectors = this.rootElement.querySelectorAll('select');\n        const saveDraftDebounce = debounce(this.saveDraft, DEBOUNCE_TIMER);\n\n        textareas.forEach(async(textarea) => {\n            textarea.addEventListener('input', async(event) => {\n                const wordCounter = document.getElementById(event.target.dataset.fieldid + '-wordcounter');\n                const count = event.target.value.split(/\\s+/).filter((word) => word.length > 0).length;\n                wordCounter.innerHTML = await getString('words', 'assignsubmission_forms', count);\n                saveDraftDebounce(event.target);\n            });\n        });\n        inputs.forEach(async(input) => {\n            input.addEventListener('input', async(event) => {\n                saveDraftDebounce(event.target);\n            });\n        });\n        checkboxes.forEach(async(checkbox) => {\n            checkbox.addEventListener('input', async(event) => {\n                saveDraftDebounce(event.target);\n            });\n        });\n        dateSelectors.forEach(async(dateSelector) => {\n            dateSelector.addEventListener('input', async(event) => {\n                saveDraftDebounce(event.target);\n            });\n        });\n        document.addEventListener('click', async(event) => {\n            const popOvers = document.querySelectorAll('[data-toggle=\"popover\"]');\n            const currentPopover = event.target.closest('[data-toggle=\"popover\"]');\n            if (popOvers.length > 0) {\n                popOvers.forEach((popover) => {\n                    if (popover !== currentPopover) {\n                        $(popover).popover('hide');\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Save a draft of the field.\n     * @param {HTMLElement} field The field to save.\n     */\n    async saveDraft(field) {\n        const rootElement = document.querySelector('.forms-form');\n        const assignmentid = rootElement.querySelector('input[name=\"instanceid\"]').value;\n        const fieldid = field.name.match(/\\[(\\d+)\\]/)[1];\n\n        let value = field.value;\n        if (field.name.includes('[day]') || field.name.includes('[month]') || field.name.includes('[year]')) {\n            const day = rootElement.querySelector(`select[name=\"forms[${fieldid}][day]\"]`).value;\n            const month = rootElement.querySelector(`select[name=\"forms[${fieldid}][month]\"]`).value;\n            const year = rootElement.querySelector(`select[name=\"forms[${fieldid}][year]\"]`).value;\n            // Get me a unix timestamp in the format: 1757372400\n            value = new Date(year, month - 1, day).getTime() / 1000;\n        }\n\n        const data = {\n            assignmentid: parseInt(assignmentid),\n            fieldid: parseInt(fieldid),\n            value: value,\n        };\n\n        await Repository.storeDraft(data);\n    }\n\n}\n\n/*\n * Initialise\n * @param {HTMLElement} element The element.\n * @param {String} courseid The courseid.\n */\nconst init = () => {\n    new Forms();\n};\n\nexport default {\n    init: init,\n};\n"],"names":["Forms","constructor","rootElement","document","querySelector","init","this","querySelectorAll","forEach","async","areaid","textarea","dataset","fieldid","statusid","count","value","split","filter","word","length","html","js","Templates","renderForPromise","appendNodeContents","parentNode","addValidationClassesToInput","bindEvents","setValidationState","element","trim","classList","add","remove","handleFocusOut","handleFocus","handleKeyUp","input","hasAttribute","addEventListener","textareas","inputs","checkboxes","dateSelectors","saveDraftDebounce","saveDraft","wordCounter","getElementById","event","target","innerHTML","checkbox","dateSelector","popOvers","currentPopover","closest","popover","field","assignmentid","name","match","includes","day","month","year","Date","getTime","data","parseInt","Repository","storeDraft"],"mappings":"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"}