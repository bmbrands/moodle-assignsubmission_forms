define("assignsubmission_forms/forms",["exports","core/templates","core/str","./repository","jquery","core/utils"],(function(_exports,_templates,_str,_repository,_jquery,_utils){function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}
/**
   * TODO describe module forms
   *
   * @module     assignsubmission_forms/forms
   * @copyright  2025 Bas Brands <bas@sonsbeekmedia.nl>, Jonas Rehkopp <jonas.rehkopp@polizei.nrw.de>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_templates=_interopRequireDefault(_templates),_repository=_interopRequireDefault(_repository),_jquery=_interopRequireDefault(_jquery);class forms{constructor(){this.rootElement=document.querySelector(".forms-form"),this.init()}async init(){this.rootElement.querySelectorAll("textarea").forEach((async textarea=>{const areaid=textarea.dataset.fieldid+"-wordcounter",statusid=textarea.dataset.fieldid+"-status",count=textarea.value.split(/\s+/).filter((word=>word.length>0)).length,{html:html,js:js}=await _templates.default.renderForPromise("assignsubmission_forms/fieldactions",{areaid:areaid,statusid:statusid,count:count});_templates.default.appendNodeContents(textarea.parentNode,html,js)})),this.addValidationClassesToInput(),this.bindEvents()}addValidationClassesToInput(){const setValidationState=element=>{""===element.value.trim()?element.classList.add("is-invalid"):element.classList.remove("is-invalid")},handleFocusOut=element=>{element.classList.add("needs-validation","was-validated"),setValidationState(element)},handleFocus=element=>{element.classList.remove("needs-validation","was-validated"),setValidationState(element)},handleKeyUp=element=>{setValidationState(element)};this.rootElement.querySelectorAll("input").forEach((input=>{input.hasAttribute("aria-required")&&(input.addEventListener("focusout",(()=>handleFocusOut(input))),input.addEventListener("focus",(()=>handleFocus(input))),input.addEventListener("keyup",(()=>handleKeyUp(input))))}));this.rootElement.querySelectorAll("textarea").forEach((textarea=>{textarea.hasAttribute("aria-required")&&(textarea.addEventListener("focusout",(()=>handleFocusOut(textarea))),textarea.addEventListener("focus",(()=>handleFocus(textarea))),textarea.addEventListener("keyup",(()=>handleKeyUp(textarea))))}))}async bindEvents(){const textareas=this.rootElement.querySelectorAll("textarea"),inputs=this.rootElement.querySelectorAll('input[type="text"]'),checkboxes=this.rootElement.querySelectorAll('input[type="checkbox"]'),dateSelectors=this.rootElement.querySelectorAll("select"),saveDraftDebounce=(0,_utils.debounce)(this.saveDraft,2e3);textareas.forEach((async textarea=>{textarea.addEventListener("input",(async event=>{const wordCounter=document.getElementById(event.target.dataset.fieldid+"-wordcounter"),count=event.target.value.split(/\s+/).filter((word=>word.length>0)).length;wordCounter.innerHTML=await(0,_str.getString)("words","assignsubmission_forms",count),saveDraftDebounce(event.target)}))})),inputs.forEach((async input=>{input.addEventListener("input",(async event=>{saveDraftDebounce(event.target)}))})),checkboxes.forEach((async checkbox=>{checkbox.addEventListener("input",(async event=>{saveDraftDebounce(event.target)}))})),dateSelectors.forEach((async dateSelector=>{dateSelector.addEventListener("input",(async event=>{saveDraftDebounce(event.target)}))})),document.addEventListener("click",(async event=>{const popOvers=document.querySelectorAll('[data-toggle="popover"]'),currentPopover=event.target.closest('[data-toggle="popover"]');popOvers.length>0&&popOvers.forEach((popover=>{popover!==currentPopover&&(0,_jquery.default)(popover).popover("hide")}))}))}async saveDraft(field){let fieldname="",hiddenfield="",data="",value="";if("textarea"==field.type){document.getElementById(field.dataset.fieldid+"-status").classList.add("saving")}else"select-one"==field.type?(field.name.includes("[day]")?fieldname=field.name.replace("[day]",""):field.name.includes("[month]")?fieldname=field.name.replace("[month]",""):field.name.includes("[year]")&&(fieldname=field.name.replace("[year]","")),hiddenfield=document.getElementById("hidden_"+fieldname)):hiddenfield=document.getElementById("hidden_"+field.name);if(hiddenfield){switch(value="",field.type){case"checkbox":value=field.checked;break;case"select-one":let day=document.querySelector('select[name="'+fieldname+'[day]"]').value,month=document.querySelector('select[name="'+fieldname+'[month]"]').value,year=document.querySelector('select[name="'+fieldname+'[year]"]').value;value=day+month+year,value=new Date(year,month-1,day).getTime();break;default:value=field.value}data={assignmentid:parseInt(hiddenfield.dataset.assignmentid),fieldid:parseInt(hiddenfield.dataset.fieldid),value:value}}else data={assignmentid:parseInt(field.dataset.assignmentid),fieldid:parseInt(field.dataset.fieldid),value:field.value};const response=await _repository.default.storeDraft(data);"textarea"==field.type&&response&&statusdiv.classList.remove("saving")}}_exports.default={init:()=>{new forms}};return _exports.default}));

//# sourceMappingURL=forms.min.js.map